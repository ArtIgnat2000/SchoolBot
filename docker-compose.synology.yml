version: '3.8'

services:
  school-bot:
    build: .
    container_name: school-bot
    restart: unless-stopped
    
    # Переменные окружения из .env файла
    env_file:
      - .env
    
    # Дополнительные переменные окружения
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Europe/Moscow  # Измените на ваш часовой пояс
    
    # Примонтированные тома для логов и данных
    volumes:
      - ./logs:/app/logs:rw
      - /etc/localtime:/etc/localtime:ro
    
    # Ограничения ресурсов для Synology
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    
    # Настройка логирования (важно для Synology)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        labels: "service=school-bot"
    
    # Проверка здоровья контейнера
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Дополнительные параметры для Synology
    labels:
      - "com.synology.project=school-bot"
      - "com.synology.description=Telegram School Bot"
      - "com.synology.maintainer=@Vprog2"

# Опциональные сервисы для расширения функциональности

  # Nginx для веб-интерфейса (опционально)
  # nginx:
  #   image: nginx:alpine
  #   container_name: school-bot-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./web:/usr/share/nginx/html:ro
  #   depends_on:
  #     - school-bot
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 64M
  #         cpus: '0.1'

  # Redis для кэширования (опционально)
  # redis:
  #   image: redis:7-alpine
  #   container_name: school-bot-redis
  #   restart: unless-stopped
  #   volumes:
  #     - redis_data:/data
  #   command: redis-server --appendonly yes --maxmemory 64mb --maxmemory-policy allkeys-lru
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 96M
  #         cpus: '0.1'
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # PostgreSQL для данных (опционально)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: school-bot-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: school_bot
  #     POSTGRES_USER: bot_user
  #     POSTGRES_PASSWORD: secure_password_here
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #         cpus: '0.5'
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U bot_user -d school_bot"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

# Именованные тома для постоянного хранения данных
# volumes:
#   redis_data:
#     driver: local
#   postgres_data:
#     driver: local

# Сети (опционально, для изоляции)
# networks:
#   school-bot-network:
#     driver: bridge
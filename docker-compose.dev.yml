version: '3.8'

services:
  school-bot:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: school-bot-dev
    restart: unless-stopped
    
    # üîÑ –ú–û–ù–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–î–ê –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò
    volumes:
      # –ú–æ–Ω—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞
      - .:/app
      # –ò—Å–∫–ª—é—á–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–æ—Å—Ç–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)
      - /app/venv
      # –ò—Å–∫–ª—é—á–∞–µ–º __pycache__ (–¥–ª—è —á–∏—Å—Ç–æ—Ç—ã)
      - /app/__pycache__
      - /app/handlers/__pycache__
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1  # –û—Ç–∫–ª—é—á–∞–µ–º .pyc —Ñ–∞–π–ª—ã
      - PYTHONPATH=/app            # –ü—É—Ç—å –∫ –∫–æ–¥—É
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞
    env_file:
      - .env
    
    # üîÑ –ê–í–¢–û–ü–ï–†–ï–ó–ê–ü–£–°–ö –ü–†–ò –ò–ó–ú–ï–ù–ï–ù–ò–Ø–•
    # –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –∫–æ–¥–∞
    command: >
      sh -c "
        pip install watchdog[watchmedo] &&
        watchmedo auto-restart --directory=/app --pattern='*.py' --recursive -- python main.py
      "
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # –†–µ—Å—É—Ä—Å—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    
    # Healthcheck
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
  # redis:
  #   image: redis:7-alpine
  #   container_name: school-bot-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 64M
  #         cpus: '0.1'

# volumes:
#   redis_data:
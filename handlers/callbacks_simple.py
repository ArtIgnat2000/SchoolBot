from aiogram import Router
from aiogram.types import CallbackQuery
from keyboards import (
    get_main_menu, get_help_menu, get_school_menu, 
    get_settings_menu, get_back_button
)
from utils import get_user_name

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è callback'–æ–≤
callbacks_router = Router()


@callbacks_router.callback_query(lambda c: c.data == "menu")
async def show_main_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_name = get_user_name(callback)
    
    menu_text = (
        f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    )
    
    try:
        await callback.message.edit_text(text=menu_text, reply_markup=get_main_menu())
    except:
        await callback.message.answer(text=menu_text, reply_markup=get_main_menu())
    
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "help")
async def show_help_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–ø—Ä–∞–≤–∫–∏"""
    help_text = "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏:"
    
    try:
        await callback.message.edit_text(text=help_text, reply_markup=get_help_menu())
    except:
        await callback.message.answer(text=help_text, reply_markup=get_help_menu())
    
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "help_commands")
async def show_help_commands(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    commands_text = (
        "ü§ñ <b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n\n"
        "üè† <code>/start</code> - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "üîÑ <code>/menu</code> - –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "<b>–ß–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:</b>\n"
        "üìö –°–ø—Ä–∞–≤–∫–∞ - –ø–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å\n"
        "‚ÑπÔ∏è –û –±–æ—Ç–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"
        "üéì –®–∫–æ–ª—å–Ω—ã–µ –¥–µ–ª–∞ - —É—á–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n"
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è\n\n"
        "<i>–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è - –±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞!</i>"
    )
    
    try:
        await callback.message.edit_text(text=commands_text, reply_markup=get_back_button())
    except:
        await callback.message.answer(text=commands_text, reply_markup=get_back_button())
    
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "info")
async def show_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    info_text = (
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:</b>\n\n"
        "ü§ñ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> School Bot Helper\n"
        "üì¶ <b>–í–µ—Ä—Å–∏—è:</b> 1.1.0\n"
        "üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> School Bot Team\n"
        "üîß <b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b> Python + aiogram 3.0\n"
        "üìÖ <b>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</b> 17.10.2025\n\n"
        "üéØ <b>–¶–µ–ª—å:</b>\n"
        "–ü–æ–º–æ—á—å —à–∫–æ–ª—å–Ω–∏–∫–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∏ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö —à–∫–æ–ª—å–Ω—ã—Ö –¥–µ–ª.\n\n"
        "üÜï <b>–ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –≤–µ—Ä—Å–∏–∏ 1.1.0:</b>\n"
        "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
        "‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n"
        "üí° <b>–ò–¥–µ–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</b>\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞!"
    )
    
    try:
        await callback.message.edit_text(text=info_text, reply_markup=get_back_button())
    except:
        await callback.message.answer(text=info_text, reply_markup=get_back_button())
    
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "school")
async def show_school_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —à–∫–æ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    school_text = (
        "üéì <b>–®–∫–æ–ª—å–Ω—ã–µ –¥–µ–ª–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:\n\n"
        "<i>üí° –ú–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö!</i>"
    )
    
    try:
        await callback.message.edit_text(text=school_text, reply_markup=get_school_menu())
    except:
        await callback.message.answer(text=school_text, reply_markup=get_school_menu())
    
    await callback.answer()


def register_callbacks(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ callback'–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ"""
    dp.include_router(callbacks_router)
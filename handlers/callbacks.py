from aiogram import Router
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest
from keyboards import (
    get_main_menu, get_help_menu, get_school_menu, 
    get_settings_menu, get_back_button
)
from utils import get_user_name
import logging

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è callback'–æ–≤
callbacks_router = Router()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)


async def safe_edit_message(callback: CallbackQuery, text: str, reply_markup=None):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ message —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ Message (–Ω–µ InaccessibleMessage)
        if callback.message and isinstance(callback.message, Message):
            await callback.message.edit_text(text=text, reply_markup=reply_markup)
        elif callback.message and hasattr(callback.message, 'answer'):
            # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.answer(text=text, reply_markup=reply_markup)
        elif callback.bot and callback.from_user:
            # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
            await callback.bot.send_message(
                chat_id=callback.from_user.id,
                text=text,
                reply_markup=reply_markup
            )
    except (TelegramBadRequest, AttributeError) as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            if callback.bot and callback.from_user:
                await callback.bot.send_message(
                    chat_id=callback.from_user.id,
                    text=text,
                    reply_markup=reply_markup
                )
        except Exception as inner_e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {inner_e}")


@callbacks_router.callback_query(lambda c: c.data == "menu")
async def show_main_menu(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    try:
        user_name = get_user_name(callback)
    except:
        user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    menu_text = (
        f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    )
    
    await safe_edit_message(callback, menu_text, get_main_menu())
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "help")
async def show_help_menu(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–ø—Ä–∞–≤–∫–∏
    """
    help_text = (
        "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏:"
    )
    
    await safe_edit_message(callback, help_text, get_help_menu())
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "help_commands")
async def show_help_commands(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
    """
    commands_text = (
        "ü§ñ <b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n\n"
        "üè† <code>/start</code> - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "üîÑ <code>/menu</code> - –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "<b>–ß–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:</b>\n"
        "üìö –°–ø—Ä–∞–≤–∫–∞ - –ø–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å\n"
        "‚ÑπÔ∏è –û –±–æ—Ç–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"
        "üéì –®–∫–æ–ª—å–Ω—ã–µ –¥–µ–ª–∞ - —É—á–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n"
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è\n\n"
        "<i>–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è - –±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞!</i>"
    )
    
    await callback.message.edit_text(
        text=commands_text,
        reply_markup=get_back_button()
    )
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "help_chat")
async def show_help_chat(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –æ–±—â–µ–Ω–∏—é
    """
    chat_text = (
        "üí¨ <b>–ö–∞–∫ –æ–±—â–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º:</b>\n\n"
        "<b>–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç:</b>\n"
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: –ø—Ä–∏–≤–µ—Ç, hello, hi\n"
        "üëã –ü—Ä–æ—â–∞–Ω–∏—è: –ø–æ–∫–∞, bye, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è\n"
        "üôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏: —Å–ø–∞—Å–∏–±–æ, thanks\n"
        "üéì –®–∫–æ–ª—å–Ω—ã–µ —Ç–µ–º—ã: —à–∫–æ–ª–∞, —É—á—ë–±–∞, —É—Ä–æ–∫\n\n"
        "<b>–¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:</b>\n"
        "üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "üé• –í–∏–¥–µ–æ\n"
        "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã\n"
        "üòÑ –°—Ç–∏–∫–µ—Ä—ã\n"
        "üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
        "<i>–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ - –±–æ—Ç –≤–∞—Å –ø–æ–π–º–µ—Ç!</i>"
    )
    
    await callback.message.edit_text(
        text=chat_text,
        reply_markup=get_back_button()
    )
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "help_features")
async def show_help_features(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
    """
    features_text = (
        "üìã <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:</b>\n\n"
        "üéì <b>–®–∫–æ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        "‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n"
        "‚Ä¢ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n"
        "‚Ä¢ –û—Ü–µ–Ω–∫–∏ –∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n"
        "ü§ñ <b>–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:</b>\n"
        "‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤\n"
        "‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –º–µ–¥–∏–∞\n\n"
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
        "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
        "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "‚Ä¢ –Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
        "<i>–ë–æ–ª—å—à–µ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ—è–≤–∏—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö!</i>"
    )
    
    await callback.message.edit_text(
        text=features_text,
        reply_markup=get_back_button()
    )
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "info")
async def show_info(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    """
    info_text = (
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:</b>\n\n"
        "ü§ñ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> School Bot Helper\n"
        "üì¶ <b>–í–µ—Ä—Å–∏—è:</b> 1.1.0\n"
        "üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> School Bot Team\n"
        "üîß <b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b> Python + aiogram 3.0\n"
        "üìÖ <b>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</b> 17.10.2025\n\n"
        "üéØ <b>–¶–µ–ª—å:</b>\n"
        "–ü–æ–º–æ—á—å —à–∫–æ–ª—å–Ω–∏–∫–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∏ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö —à–∫–æ–ª—å–Ω—ã—Ö –¥–µ–ª.\n\n"
        "üÜï <b>–ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –≤–µ—Ä—Å–∏–∏ 1.1.0:</b>\n"
        "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
        "‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n"
        "üí° <b>–ò–¥–µ–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</b>\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞!"
    )
    
    await callback.message.edit_text(
        text=info_text,
        reply_markup=get_back_button()
    )
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "school")
async def show_school_menu(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —à–∫–æ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    """
    school_text = (
        "üéì <b>–®–∫–æ–ª—å–Ω—ã–µ –¥–µ–ª–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:\n\n"
        "<i>üí° –ú–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö!</i>"
    )
    
    await callback.message.edit_text(
        text=school_text,
        reply_markup=get_school_menu()
    )
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data in ["schedule", "homework", "grades", "subjects"])
async def show_school_feature(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —à–∫–æ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    """
    feature_map = {
        "schedule": {
            "title": "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
            "text": "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –Ω–∞ –Ω–µ–¥–µ–ª—é."
        },
        "homework": {
            "title": "üìù –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è", 
            "text": "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º."
        },
        "grades": {
            "title": "üìä –û—Ü–µ–Ω–∫–∏",
            "text": "–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ –æ—Ü–µ–Ω–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏."
        },
        "subjects": {
            "title": "üìñ –ü—Ä–µ–¥–º–µ—Ç—ã",
            "text": "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –∏–∑—É—á–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –∏ —É—á–∏—Ç–µ–ª—è—Ö."
        }
    }
    
    feature = feature_map.get(callback.data)
    if feature:
        feature_text = (
            f"{feature['title']}\n\n"
            f"{feature['text']}\n\n"
            f"üöß <b>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>\n"
            f"–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.\n\n"
            f"üéØ <b>–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
            f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
            f"‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
            f"‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É—á–µ–±–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏\n"
            f"‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"
        )
        
        await callback.message.edit_text(
            text=feature_text,
            reply_markup=get_back_button()
        )
    
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data == "settings")
async def show_settings_menu(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    settings_text = (
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ–¥ —Å–µ–±—è:"
    )
    
    await callback.message.edit_text(
        text=settings_text,
        reply_markup=get_settings_menu()
    )
    await callback.answer()


@callbacks_router.callback_query(lambda c: c.data.startswith("settings_"))
async def show_settings_feature(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    """
    settings_map = {
        "settings_notifications": {
            "title": "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            "text": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∏ –æ—Ü–µ–Ω–∫–∞—Ö."
        },
        "settings_language": {
            "title": "üåê –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
            "text": "–í—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–æ—Ç–∞ (—Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)."
        },
        "settings_theme": {
            "title": "üé® –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
            "text": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —ç–º–æ–¥–∑–∏."
        }
    }
    
    setting = settings_map.get(callback.data)
    if setting:
        setting_text = (
            f"{setting['title']}\n\n"
            f"{setting['text']}\n\n"
            f"üöß <b>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>\n"
            f"–≠—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.\n\n"
            f"üí° <b>–ü–æ–∫–∞ —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.</b>"
        )
        
        await callback.message.edit_text(
            text=setting_text,
            reply_markup=get_back_button()
        )
    
    await callback.answer()


def register_callbacks(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ callback'–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
    """
    dp.include_router(callbacks_router)
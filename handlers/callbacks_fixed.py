from aiogram import Router
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest
from keyboards import get_main_menu, get_back_button
from utils import get_user_name
import logging

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è callback'–æ–≤
callbacks_router = Router()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)


async def safe_answer_callback(callback: CallbackQuery, text: str = "", show_alert: bool = False):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ callback —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        await callback.answer(text=text, show_alert=show_alert)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback: {e}")


async def safe_edit_or_send(callback: CallbackQuery, text: str, reply_markup=None):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if callback.message and hasattr(callback.message, 'edit_text'):
            await callback.message.edit_text(text=text, reply_markup=reply_markup)
            return True
    except (TelegramBadRequest, AttributeError) as e:
        logger.info(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ: {e}")
    
    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        if callback.message and hasattr(callback.message, 'answer'):
            await callback.message.answer(text=text, reply_markup=reply_markup)
            return True
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ message.answer: {e}")
    
    # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - —á–µ—Ä–µ–∑ –±–æ—Ç–∞
    try:
        if callback.bot and callback.from_user:
            await callback.bot.send_message(
                chat_id=callback.from_user.id,
                text=text,
                reply_markup=reply_markup
            )
            return True
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False


@callbacks_router.callback_query(lambda c: c.data == "menu")
async def show_main_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_name = get_user_name(callback)
    menu_text = (
        f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    )
    
    await safe_edit_or_send(callback, menu_text, get_main_menu())
    await safe_answer_callback(callback)


@callbacks_router.callback_query(lambda c: c.data == "info")
async def show_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    info_text = (
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ School Bot</b>\n\n"
        "ü§ñ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> School Bot Helper\n"
        "üì¶ <b>–í–µ—Ä—Å–∏—è:</b> 1.1.0\n"
        "üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> @Vprog2\n"
        "üîß <b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b> Python + aiogram 3.0\n"
        "üìÖ <b>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</b> 17.10.2025\n\n"
        "üéØ <b>–¶–µ–ª—å:</b> –ü–æ–º–æ—á—å —à–∫–æ–ª—å–Ω–∏–∫–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å\n\n"
        "üÜï <b>–ù–æ–≤–æ–µ –≤ –≤–µ—Ä—Å–∏–∏ 1.1.0:</b>\n"
        "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
        "‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
    )
    
    await safe_edit_or_send(callback, info_text, get_back_button())
    await safe_answer_callback(callback)


@callbacks_router.callback_query(lambda c: c.data == "help")
async def show_help(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    help_text = (
        "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ School Bot</b>\n\n"
        "ü§ñ <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "‚Ä¢ /menu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /help - —Å–ø—Ä–∞–≤–∫–∞\n"
        "‚Ä¢ /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
        "üí¨ <b>–û–±—â–µ–Ω–∏–µ:</b>\n"
        "–ü–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞!\n\n"
        "üì± <b>–ù–∞–≤–∏–≥–∞—Ü–∏—è:</b>\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞"
    )
    
    await safe_edit_or_send(callback, help_text, get_back_button())
    await safe_answer_callback(callback)


@callbacks_router.callback_query(lambda c: c.data in ["school", "settings"])
async def show_feature_in_development(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"""
    feature_names = {
        "school": "üéì –®–∫–æ–ª—å–Ω—ã–µ –¥–µ–ª–∞",
        "settings": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    }
    
    feature_name = feature_names.get(callback.data, "–§—É–Ω–∫—Ü–∏—è")
    
    feature_text = (
        f"üöß <b>{feature_name}</b>\n\n"
        f"–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.\n\n"
        f"üéØ <b>–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        f"‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤\n"
        f"‚Ä¢ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è\n"
        f"‚Ä¢ –û—Ü–µ–Ω–∫–∏ –∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å\n"
        f"‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        f"‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n\n"
        f"üí° <b>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!</b>"
    )
    
    await safe_edit_or_send(callback, feature_text, get_back_button())
    await safe_answer_callback(callback)


@callbacks_router.callback_query()
async def handle_unknown_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback'–æ–≤"""
    await safe_answer_callback(callback, "üîÑ –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    user_name = get_user_name(callback)
    menu_text = (
        f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    )
    
    await safe_edit_or_send(callback, menu_text, get_main_menu())


def register_callbacks(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ callback'–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ"""
    dp.include_router(callbacks_router)
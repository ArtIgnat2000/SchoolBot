from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from utils import get_user_name
from keyboards import get_main_menu

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥
commands_router = Router()


@commands_router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    user_name = get_user_name(message)
    await message.answer(
        f"üéì <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ School Bot!</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, <b>{user_name}!</b> üëã\n\n"
        f"–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å —à–∫–æ–ª—å–Ω—ã–º–∏ –¥–µ–ª–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è - —è –ø–æ–Ω–∏–º–∞—é –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞!\n\n"
        f"<i>üí° –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é:</i>",
        reply_markup=get_main_menu()
    )


@commands_router.message(Command("menu"))
async def command_menu_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    user_name = get_user_name(message)
    await message.answer(
        f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=get_main_menu()
    )


@commands_router.message(Command("help"))
async def command_help_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    """
    help_text = (
        "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ School Bot</b>\n\n"
        "ü§ñ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "‚Ä¢ /menu - –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "‚Ä¢ /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n"
        "üí¨ <b>–ö–∞–∫ –æ–±—â–∞—Ç—å—Å—è:</b>\n"
        "–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è! –ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç:\n"
        "‚Ä¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (–ø—Ä–∏–≤–µ—Ç, hello)\n"
        "‚Ä¢ –ü—Ä–æ—â–∞–Ω–∏—è (–ø–æ–∫–∞, bye)\n"
        "‚Ä¢ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ (—Å–ø–∞—Å–∏–±–æ, thanks)\n"
        "‚Ä¢ –®–∫–æ–ª—å–Ω—ã–µ —Ç–µ–º—ã (—à–∫–æ–ª–∞, —É—á—ë–±–∞)\n\n"
        "üì± <b>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é:</b>\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    )
    from keyboards import get_back_button
    await message.answer(help_text, reply_markup=get_back_button())


@commands_router.message(Command("info"))
async def command_info_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info
    """
    info_text = (
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ School Bot</b>\n\n"
        "ü§ñ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> School Bot Helper\n"
        "üì¶ <b>–í–µ—Ä—Å–∏—è:</b> 1.1.0\n"
        "üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> @Vprog2\n"
        "üîß <b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b> Python + aiogram 3.0\n"
        "üìÖ <b>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</b> 17.10.2025\n\n"
        "üéØ <b>–¶–µ–ª—å:</b>\n"
        "–ü–æ–º–æ—á—å —à–∫–æ–ª—å–Ω–∏–∫–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∏ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö —à–∫–æ–ª—å–Ω—ã—Ö –¥–µ–ª.\n\n"
        "üÜï <b>–ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –≤–µ—Ä—Å–∏–∏ 1.1.0:</b>\n"
        "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
        "‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n"
        "‚Ä¢ –ë–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n"
        "üí° <b>–ò–¥–µ–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</b>\n"
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞!"
    )
    from keyboards import get_back_button
    await message.answer(info_text, reply_markup=get_back_button())


def register_commands(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –∫–æ–º–∞–Ω–¥ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
    """
    dp.include_router(commands_router)
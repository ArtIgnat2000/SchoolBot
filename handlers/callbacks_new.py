from aiogram import Router
from aiogram.types import CallbackQuery
from keyboards import get_main_menu, get_back_button
from utils import get_user_name

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è callback'–æ–≤
callbacks_router = Router()


@callbacks_router.callback_query()
async def handle_callbacks(callback: CallbackQuery):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback'–æ–≤"""
    
    if not callback.data:
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        return
    
    try:
        if callback.data == "menu":
            user_name = get_user_name(callback)
            menu_text = (
                f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
                f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
            )
            await callback.message.edit_text(text=menu_text, reply_markup=get_main_menu())
            
        elif callback.data == "info":
            info_text = (
                "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ School Bot</b>\n\n"
                "ü§ñ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> School Bot Helper\n"
                "üì¶ <b>–í–µ—Ä—Å–∏—è:</b> 1.1.0\n"
                "üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> @Vprog2\n"
                "üîß <b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b> Python + aiogram 3.0\n"
                "üìÖ <b>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</b> 17.10.2025\n\n"
                "üéØ <b>–¶–µ–ª—å:</b> –ü–æ–º–æ—á—å —à–∫–æ–ª—å–Ω–∏–∫–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å\n\n"
                "üÜï <b>–ù–æ–≤–æ–µ –≤ –≤–µ—Ä—Å–∏–∏ 1.1.0:</b>\n"
                "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
                "‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è\n"
                "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
            )
            await callback.message.edit_text(text=info_text, reply_markup=get_back_button())
            
        elif callback.data == "help":
            help_text = (
                "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ School Bot</b>\n\n"
                "ü§ñ <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
                "‚Ä¢ /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                "‚Ä¢ /menu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                "‚Ä¢ /help - —Å–ø—Ä–∞–≤–∫–∞\n"
                "‚Ä¢ /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
                "üí¨ <b>–û–±—â–µ–Ω–∏–µ:</b>\n"
                "–ü–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞!\n\n"
                "üì± <b>–ù–∞–≤–∏–≥–∞—Ü–∏—è:</b>\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞"
            )
            await callback.message.edit_text(text=help_text, reply_markup=get_back_button())
            
        elif callback.data in ["school", "settings"]:
            feature_text = (
                "üöß <b>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>\n\n"
                "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.\n\n"
                "üéØ <b>–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                "‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤\n"
                "‚Ä¢ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è\n"
                "‚Ä¢ –û—Ü–µ–Ω–∫–∏ –∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å\n"
                "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
                "üí° –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!"
            )
            await callback.message.edit_text(text=feature_text, reply_markup=get_back_button())
            
        else:
            # –î–ª—è –≤—Å–µ—Ö –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback'–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –º–µ–Ω—é
            await callback.answer("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
            user_name = get_user_name(callback)
            menu_text = (
                f"üéì <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é School Bot</b>\n\n"
                f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
            )
            await callback.message.edit_text(text=menu_text, reply_markup=get_main_menu())
            
    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
        await callback.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
    
    # –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
    await callback.answer()


def register_callbacks(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ callback'–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ"""
    dp.include_router(callbacks_router)